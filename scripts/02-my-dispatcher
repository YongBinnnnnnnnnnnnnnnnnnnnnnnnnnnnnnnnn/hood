#!/bin/bash

logfile=/var/log/my-dispatcher.log
echo $1 $2 start > /dev/tty1

function proxy_access_on(){
  #iptables $2 INPUT -i $1 -m addrtype --dst-type broadcast -j ACCEPT
  iptables $2 INPUT -i $1 -p tcp -d 10.0.2.1 --dport 11371 -j ACCEPT
  iptables $2 INPUT -i $1 -p udp -m udp --dport 67 --sport 68 -j ACCEPT
  iptables $2 OUTPUT -o $1 -p udp -m udp --sport 67 --dport 68 -j ACCEPT
  #iptables $2 INPUT -i $1 -p udp -m udp --dport 53 -j ACCEPT
  #iptables $2 INPUT -i $1 -p tcp -m tcp --dport 53 -j ACCEPT
  #iptables $2 OUTPUT -o $1 -m addrtype --dst-type broadcast -j ACCEPT
}
#dhcp server 67 client 68
function initial_firewall_rules(){

  #if iptables-save |grep ":IDL - " > /dev/null; then
  #  return 0
  #fi
  iptables -N IDL
  iptables -A IDL -j LOG --log-level warning --log-prefix "[UFW ID]"
  iptables -A IDL -j DROP
  iptables -N ODL
  iptables -A ODL -j LOG --log-level warning --log-prefix "[UFW OD]"
  iptables -A ODL -j DROP
  iptables -N FDL
  iptables -A FDL -j LOG --log-level warning --log-prefix "[UFW FD]"
  iptables -A FDL -j DROP
  iptables -I INPUT -j IDL
  iptables -I OUTPUT -j ODL
  iptables -I FORWARD -j FDL
  iptables -N OAL
  iptables -A OAL -j LOG --log-level warning --log-prefix "[UFW OA]"
  iptables -A OAL -j ACCEPT
  iptables -N FAL
  iptables -A FAL -j LOG --log-level warning --log-prefix "[UFW FA]"
  iptables -A FAL -j ACCEPT

  #iptables -I INPUT -i -m addrtype --dst-type multicast -j IDL
  #iptables -I INPUT -i -m addrtype --dst-type broadcast -j IDL
  #iptables -I INPUT -i -m addrtype --dst-type anycast -j IDL
  iptables -I INPUT -m addrtype --dst-type multicast -j DROP
  iptables -I INPUT -m addrtype --dst-type broadcast -j DROP
  iptables -I INPUT -m addrtype --dst-type anycast -j DROP
  #iptables -I INPUT -m addrtype --dst-type unicast -j DROP
  #iptables -t nat -A POSTROUTING -o usb0 -j MASQUERADE
  iptables -I INPUT -i lo -j ACCEPT
  iptables -I INPUT -p icmp --icmp-type 3 -j ACCEPT
  #iptables -I INPUT -p icmp --icmp-type 11 -j ACCEPT
  #iptables -I INPUT -p icmp --icmp-t8pe 12 -j ACCEPT
  #iptables -I INPUT -p udp --sport 67 --dport 68 -j ACCEPT
  #iptables -I INPUT -p udp --sport 68 --dport 67 -j ACCEPT
  iptables -I INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

  iptables -I OUTPUT -m addrtype --dst-type multicast -j ODL
  iptables -I OUTPUT -m addrtype --dst-type broadcast -j ODL
  iptables -I OUTPUT -m addrtype --dst-type anycast -j ODL
  #iptables -I OUTPUT -m addrtype --dst-type unicast -j ODL
  #iptables -I INPUT IDL
  #iptables -I OUTPUT -p tcp --dport 21 -j ACCEPT
  #iptables -I OUTPUT -p tcp --dport 22 -j ACCEPT
  iptables -I OUTPUT -p tcp --dport 53 -j OAL
  iptables -I OUTPUT -p tcp --dport 80 -j OAL
  iptables -I OUTPUT -p tcp --dport 443 -j ACCEPT
  iptables -I OUTPUT -p tcp --dport 8443 -j OAL
  #iptables -I OUTPUT -p tcp --dport 9001 -j ACCEPT
  iptables -I OUTPUT -p tcp --dport 853 -j ACCEPT
  iptables -I OUTPUT -p tcp --dport 11371 -j ACCEPT

  iptables -I OUTPUT -p udp --dport 53 -j OAL
  #iptables -I OUTPUT -p udp --sport 68 --dport 67 -j ACCEPT
  #iptables -I OUTPUT -p udp --sport 67 -s 10.0.2.1 --dport 68 -j ACCEPT
  iptables -I OUTPUT -p udp --dport 123 -j OAL

  iptables -I OUTPUT -o lo -j ACCEPT
  iptables -I OUTPUT -p icmp --icmp-type 3 -j ACCEPT
  iptables -I OUTPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

  iptables -I FORWARD -o lo -j FDL
  #iptables -I FORWARD -m addrtype --dst-type unicast -j FDL
  proxy_access_on usb0 -I
  proxy_access_on usb1 -I

}


function alter_shared_forward_rules() {

stage2_op=""

if iptables -D FORWARD -i $1 -o $1 -j ACCEPT; then
  #echo "33" >/tmp/a.txt
  #sleep 2
  
  iptables -D FORWARD -i $1 -s 10.0.2.0/24 -j ACCEPT
  iptables -D FORWARD -o $1 -j REJECT --reject-with icmp-port-unreachable
  iptables -D FORWARD -d 10.0.2.0/24 -o $1 -m state --state RELATED,ESTABLISHED -j ACCEPT
  iptables -D INPUT -i $1 -p udp -m udp --dport 67 -j ACCEPT
  iptables -D INPUT -i $1 -p tcp -m tcp --dport 67 -j ACCEPT
  iptables -D INPUT -i $1 -p udp -m udp --dport 53 -j ACCEPT
  iptables -D INPUT -i $1 -p tcp -m tcp --dport 53 -j ACCEPT
  
  stage2_op="-I"
  
elif iptables -D FORWARD -i $1 -p tcp --dport 443 -j ACCEPT; then
  stage2_op="-D"
fi

  if ! [ $stage2_op ]; then
    return 0
  fi
  iptables $stage2_op INPUT -i $1 -m addrtype --dst-type broadcast -j ACCEPT
  iptables $stage2_op INPUT -i $1 -p tcp -d 10.0.2.1 --dport 11371 -j ACCEPT
  iptables $stage2_op INPUT -i $1 -p udp -m udp --dport 67 -j ACCEPT
  iptables $stage2_op INPUT -i $1 -p udp -m udp --dport 53 -j ACCEPT
  iptables $stage2_op INPUT -i $1 -p tcp -m tcp --dport 53 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 21 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 22 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 53 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 80 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 443 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 853 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp --dport 11371 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 178.77.120.0/24 -j DROP
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 116.202.114.37/32 -j DROP
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 10.10.0.0/24 -m multiport --dports 88,389,445 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 10.10.0.1 --dport 445 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 10.10.0.14 -m multiport --dport 445,88 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 10.10.0.25 -m multiport --dport 445,88 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 10.10.0.0/24 -m multiport --dports 389 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 69.191.192.0/24 -m multiport --dports 8292,8194,8195 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 69.191.205.0/24 -m multiport --dports 8292,8194,8195 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 208.22.56.0/24 -m multiport --dports 8292,8194 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p tcp -d 208.134.161.0/24 -m multiport --dports 8292,8194 -j ACCEPT

  #iptables $stage2_op FORWARD -i $1 -p udp --dport 443 -j DROP
  #iptables $stage2_op FORWARD -i $1 -p udp --dport 53 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p udp --dport 123 -j FAL
  #iptables $stage2_op FORWARD -i $1 -p udp -d 10.10.0.0/24 -m multiport --dports 389 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -p udp --dport 389 -j ACCEPT

  #iptables $stage2_op FORWARD -i $1 -p icmp --icmp-type 3 -j ACCEPT
  #iptables $stage2_op FORWARD -i $1 -m addrtype --dst-type multicast -j FDL
  #iptables $stage2_op FORWARD -i $1 -m addrtype --dst-type broadcast -j FDL
  #iptables $stage2_op FORWARD -i $1 -m addrtype --dst-type anycast -j FDL
  iptables $stage2_op FORWARD -o $1 -j FDL
  #iptables $stage2_op FORWARD -o $1 -d 10.0.2.0/24 -m state --state RELATED,ESTABLISHED -j ACCEPT
}

function wait_internet_access(){
  while ! curl http://www.bing.com/ -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36" 2>&1 |grep html > /dev/tty1; do
    echo "Waiting for network connection to install dante" |tee -a $logfile > /dev/tty1
    sleep 1
  done
}


if [ "$2" = "before-network-service" ]; then
  initial_firewall_rules
elif [ "$2" = "pre-up" ]; then
  alter_shared_forward_rules $1 $2
  if [ "$1" = "usb0" ]; then
    # 
    true
  fi
elif [ "$2" = "up" ]; then
  if [[ "$1" = "wlan0" || "$1" = "eth0" ]]; then
    if nmcli -g GENERAL.STATE con show USI-Guest | grep activ; then
      echo "Login USI-Guest" |tee -a $logfile > /dev/tty1
      nmcli con show USI-Guest |tee -a $logfile > /dev/tty1
      /var/login_usi.py 2>&1 |tee -a $logfile > /dev/tty1
    fi
    echo "test danted" |tee -a $logfile > /dev/tty1
    if ! test -f /usr/sbin/danted; then
      echo "dante-server not installed" |tee -a $logfile > /dev/tty1
      wait_internet_access
      rm /var/lib/apt/lists/*_*
      apt-get update 2>&1 |tee -a $logfile > /dev/tty1
      dpkg --configure -a
      apt list dante-serer 2>&1 |tee -a $logfile > /dev/tty1
      apt-get install -y -o Dpkg::Options::="--force-confold" dante-server 2>&1 |tee -a $logfile > /dev/tty1
      if ! test -f /usr/sbin/danted; then
        echo "Failed to install dante" |tee -a $logfile > /dev/tty1
        curl http://www.bing.com/ -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36" 2>&1 |tee -a $logfile > /dev/tty1
        openssl s_client --connect mirror.init7.net:443 -showcerts </dev/null 2>&1 |tee -a $logfile > /dev/tty1

        sleep 10
        shutdown -P now
        exit 0
      fi
    fi
    echo "Config dante to use" $1 |tee -a $logfile > /dev/tty1
    sed -i "s|external: eth0|external: "$1"|g" /etc/danted.conf
    sed -i "s|external: wlan0|external: "$1"|g" /etc/danted.conf
    echo "Up usb0" |tee -a $logfile > /dev/tty1
    #if nmcli connection show --active|grep usb0; then
    if ip address show usb0|grep inet; then
      $0 "usb0" "up"
    elif ip address show usb1|grep inet; then
      $0 "usb1" "up"
    else
      #ip link set usb0 down
      #ip link set usb0 address 99:88:77:66:55:43
      nmcli connection up usb0
    fi
    
    if test -f /do_upgrade; then
      wait_internet_access
      apt-get update |tee -a $logfile > /dev/tty1
      apt-get full-upgrade -y|tee -a $logfile > /dev/tty1
      rm /do_upgrade
      reboot
    fi
    if test -f /run_once; then
      wait_internet_access
      echo "run once" |tee -a $logfile > /dev/tty1
      rm /tmp/run_once
      mv /run_once /tmp/
      /tmp/run_once |tee -a $logfile > /dev/tty1
      reboot
    fi
  elif [ "$1" = "usb0" ]; then
    killall danted
    /usr/sbin/danted 2>&1 > /dev/tty1 &
  fi
elif [ "$2" = "down" ]; then
  alter_shared_forward_rules $1 $2
fi

if [ "$2" = "connectivity-change" ]; then
    exit 0;
fi

echo $1 $2 end > /dev/tty1


exit 0
